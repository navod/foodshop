/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.foodshop.view;

import lk.ijse.foodshop.controller.FoodController;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lk.ijse.foodshop.dto.FoodDTO;

/**
 *
 * @author kushantha
 */
public class FoodForm extends javax.swing.JPanel {

    /**
     * Creates new form FoodForm
     */
    public FoodForm() throws ClassNotFoundException, SQLException {
        initComponents();
        loadFoodId();
        loadAllFood();
        v1.setVisible(false);
        v2.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        txtDescription = new javax.swing.JTextField();
        txtQty = new javax.swing.JTextField();
        btnClear = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        lblFood = new javax.swing.JLabel();
        lblFID = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtUnitPrice = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        v1 = new javax.swing.JLabel();
        v2 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1110, 760));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(120, 36, 69));
        jLabel1.setText("MANAGE FOODS");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });
        jPanel1.add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 360, 300, 50));

        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Food  Id", "Description", "Unit Price", "Qty"
            }
        ));
        tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 420, 1110, 370));
        jPanel1.add(txtDescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, 300, 50));

        txtQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtQtyKeyReleased(evt);
            }
        });
        jPanel1.add(txtQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 170, 120, 50));

        btnClear.setBackground(new java.awt.Color(141, 134, 13));
        btnClear.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnClear.setForeground(new java.awt.Color(255, 255, 255));
        btnClear.setText("CLEAR");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        jPanel1.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 360, 100, 40));

        btnAdd.setBackground(new java.awt.Color(141, 134, 13));
        btnAdd.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jPanel1.add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 360, 100, 40));

        btnUpdate.setBackground(new java.awt.Color(141, 134, 13));
        btnUpdate.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel1.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 360, 100, 40));

        lblFood.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblFood.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFood.setText("N/A");
        lblFood.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel1.add(lblFood, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 30, 120, -1));

        lblFID.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblFID.setText("NEW FOOD ID :");
        jPanel1.add(lblFID, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 30, -1, -1));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setText("qty :");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 140, -1, -1));

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel6.setText("DESCRIPTION");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, -1));

        btnDelete.setBackground(new java.awt.Color(141, 134, 13));
        btnDelete.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel1.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 360, 100, 40));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/Untitled-2.jpg"))); // NOI18N
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 970, -1));

        jPanel2.setBackground(new java.awt.Color(41, 39, 40));
        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1110, -1));

        txtUnitPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUnitPriceKeyReleased(evt);
            }
        });
        jPanel1.add(txtUnitPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 170, 170, 50));

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setText("Unit Price :");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 140, 110, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/icons8_search_50px_3.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 360, 50, 50));

        v1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        v1.setForeground(new java.awt.Color(204, 51, 0));
        v1.setText("please enter valid number");
        jPanel1.add(v1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 220, -1, -1));

        v2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        v2.setForeground(new java.awt.Color(204, 51, 0));
        v2.setText("please enter valid number");
        jPanel1.add(v2, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 220, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1110, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 790, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 790, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try {
            String id = lblFood.getText();
            String description = txtDescription.getText();
            double unitPrice = Double.parseDouble(txtUnitPrice.getText());
            String qty = txtQty.getText();
            if (txtQty != null) {
                if (txtUnitPrice != null && txtQty != null && txtDescription != null) {
                    boolean isAdd = new FoodController().isAddedFood(new FoodDTO(id, description, unitPrice, qty));

                    if (isAdd) {
                        JOptionPane.showMessageDialog(this, "Added Item");
                        loadAllFood();
                        clearText();
                        loadFoodId();
                    } else {
                        JOptionPane.showMessageDialog(this, "check again");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "check again");
                }

            } else {
                if (txtUnitPrice != null && txtDescription != null) {
                    boolean isAdd = new FoodController().isAddedFood(new FoodDTO(id, description, unitPrice));

                    if (isAdd) {
                        JOptionPane.showMessageDialog(this, "Added Item");
                        loadAllFood();
                        clearText();
                        loadFoodId();
                    } else {
                        JOptionPane.showMessageDialog(this, "check again");
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "check again");
                }

            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FoodForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FoodForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnAddActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased

        try {
            DefaultTableModel model = (DefaultTableModel) tbl.getModel();
            model.setRowCount(0);

            for (FoodDTO temp : new FoodController().searchFoods(txtSearch.getText())) {
                model.addRow(new Object[]{
                    temp.getfId(),
                    temp.getDescription(),
                    temp.getUnitPrice(),
                    temp.getQty()

                });
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FoodForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FoodForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            String id = lblFood.getText();
            boolean isDelete = new FoodController().deleteFood(id);
            if (isDelete) {
                JOptionPane.showMessageDialog(this, "Food deleted");
                clearText();
                loadAllFood();
                loadFoodId();
            } else {
                JOptionPane.showMessageDialog(this, "Try again");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CustomerForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CustomerForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearText();
        lblFID.setText("NEW FOOD ID:");
        try {
            loadFoodId();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CustomerForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CustomerForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnClearActionPerformed

    private void tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMouseClicked
        int i = tbl.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tbl.getModel();
        lblFood.setText(model.getValueAt(i, 0).toString());
        txtDescription.setText(model.getValueAt(i, 1).toString());
        txtUnitPrice.setText(model.getValueAt(i, 2).toString());
        txtQty.setText(model.getValueAt(i, 3).toString());

        lblFID.setText("Food ID :");

    }//GEN-LAST:event_tblMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try {
            String id = lblFood.getText();
            String description = txtDescription.getText();
            double unitPrice = Double.parseDouble(txtUnitPrice.getText());
            String qty = txtQty.getText();

            boolean isUpdate = new FoodController().updateFood(new FoodDTO(id, description, unitPrice, qty));
            if (isUpdate) {
                JOptionPane.showMessageDialog(this, "Updated Food");
                loadAllFood();
                clearText();
                loadFoodId();
            } else {
                JOptionPane.showMessageDialog(this, "check again");
//                }

            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FoodForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FoodForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtUnitPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUnitPriceKeyReleased
        try {
            int x = Integer.parseInt(txtUnitPrice.getText());
            v1.setText("");
        } catch (NumberFormatException num) {
            v1.setVisible(true);
            v1.setText("Please enter valid numbers");
        }
    }//GEN-LAST:event_txtUnitPriceKeyReleased

    private void txtQtyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQtyKeyReleased
        try {
            int x = Integer.parseInt(txtQty.getText());
            v2.setText("");
        } catch (NumberFormatException num) {
            v2.setVisible(true);
            v2.setText("Please enter valid numbers");
        }
    }//GEN-LAST:event_txtQtyKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFID;
    private javax.swing.JLabel lblFood;
    private javax.swing.JTable tbl;
    private javax.swing.JTextField txtDescription;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtUnitPrice;
    private javax.swing.JLabel v1;
    private javax.swing.JLabel v2;
    // End of variables declaration//GEN-END:variables
    private void loadAllFood() throws ClassNotFoundException, SQLException {
        DefaultTableModel model = (DefaultTableModel) tbl.getModel();
        model.setRowCount(0);
        for (FoodDTO f : new FoodController().loadAllFood()) {
            model.addRow(new Object[]{
                f.getfId(),
                f.getDescription(),
                f.getUnitPrice(),
                f.getQty()

            });
        }
    }

    private void clearText() {
        txtDescription.setText("");
        txtQty.setText("");
        txtUnitPrice.setText("");

    }

    private void loadFoodId() throws ClassNotFoundException, SQLException {
        String id = new FoodController().getLastId();
        if (id == null) {
            lblFood.setText("F001");
        } else {
            String split[] = id.split("F");
            int num = Integer.parseInt(split[1]);
            num++;

            if (num < 10) {
                lblFood.setText("F00" + num);
            } else if (num < 100) {
                lblFood.setText("F0" + num);
            } else {
                lblFood.setText("F" + num);
            }
        }
    }
}
