/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.foodshop.view;

import lk.ijse.foodshop.controller.FoodController;
import lk.ijse.foodshop.controller.InvoiceController;
import lk.ijse.foodshop.controller.OrderController;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import lk.ijse.foodshop.dto.FoodDTO;
import lk.ijse.foodshop.dto.InvoiceDTO;
import lk.ijse.foodshop.dto.InvoiceDetailDTO;
import lk.ijse.foodshop.dto.QueryDTO;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import sun.text.Normalizer;

/**
 *
 * @author kushantha
 */
public class PurchaseForm extends javax.swing.JPanel {

    /**
     * Creates new form PurchaseForm
     */
    public PurchaseForm() throws ClassNotFoundException, SQLException {
        initComponents();
        AutoCompleteDecorator.decorate(comboDescription);
        loadAllFoods();
        loadInvoiceId();
        loadDate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        lblInvoice = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtAVQty = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        txtUnitPrice = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtAmount = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblCustName = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtPurchase = new javax.swing.JTextField();
        lblDiscount5 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtBalance = new javax.swing.JTextField();
        lblDiscount1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDetail = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        btnPlaceBill = new javax.swing.JButton();
        txtBQty = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        btnRemove = new javax.swing.JButton();
        txtFID = new javax.swing.JTextField();
        txtContact = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        comboDescription = new javax.swing.JComboBox<>();
        btnOk = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Invoice Id     :");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        lblInvoice.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        lblInvoice.setForeground(new java.awt.Color(0, 0, 0));
        lblInvoice.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblInvoice.setText("Invoice Id");
        lblInvoice.setAlignmentX(0.5F);
        lblInvoice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(lblInvoice, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, 150, 30));

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Date   :");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 20, -1, -1));

        lblDate.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        lblDate.setForeground(new java.awt.Color(0, 0, 0));
        lblDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDate.setText("Invoice Id");
        lblDate.setAlignmentX(0.5F);
        lblDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(lblDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 20, 150, -1));

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Food ID");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        txtAVQty.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txtAVQty.setForeground(new java.awt.Color(0, 0, 0));
        txtAVQty.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtAVQty.setSelectionColor(new java.awt.Color(0, 0, 204));
        txtAVQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAVQtyActionPerformed(evt);
            }
        });
        txtAVQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAVQtyKeyReleased(evt);
            }
        });
        add(txtAVQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 110, 70, 40));

        jLabel30.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(0, 0, 0));
        jLabel30.setText("AV QTY");
        add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 80, -1, -1));

        txtUnitPrice.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txtUnitPrice.setForeground(new java.awt.Color(0, 0, 0));
        txtUnitPrice.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtUnitPrice.setSelectionColor(new java.awt.Color(0, 0, 204));
        txtUnitPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUnitPriceActionPerformed(evt);
            }
        });
        add(txtUnitPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 110, 140, 40));

        jLabel20.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 0, 0));
        jLabel20.setText("Unit Price");
        add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 80, -1, -1));

        jLabel18.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 0, 0));
        jLabel18.setText("Amount");
        add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 80, -1, -1));

        txtAmount.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txtAmount.setForeground(new java.awt.Color(0, 0, 0));
        txtAmount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtAmount.setSelectionColor(new java.awt.Color(0, 0, 204));
        txtAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAmountActionPerformed(evt);
            }
        });
        add(txtAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 110, 150, 40));

        jLabel17.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(204, 51, 0));
        jLabel17.setText("=");
        add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 110, 30, 40));

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Description");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 80, -1, -1));

        lblCustName.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        lblCustName.setForeground(new java.awt.Color(0, 0, 0));
        lblCustName.setText("contact number");
        add(lblCustName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, -1, -1));

        txtTotal.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txtTotal.setForeground(new java.awt.Color(0, 0, 0));
        txtTotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });
        txtTotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTotalKeyReleased(evt);
            }
        });
        add(txtTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 160, 40));

        jLabel11.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Total");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        jLabel15.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setText("Purchase");
        add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 190, -1, -1));

        txtPurchase.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txtPurchase.setForeground(new java.awt.Color(0, 0, 0));
        txtPurchase.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPurchase.setSelectionColor(new java.awt.Color(0, 0, 204));
        txtPurchase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPurchaseActionPerformed(evt);
            }
        });
        txtPurchase.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPurchaseKeyPressed(evt);
            }
        });
        add(txtPurchase, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 220, 160, 40));

        lblDiscount5.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        lblDiscount5.setForeground(new java.awt.Color(204, 0, 0));
        lblDiscount5.setText("-");
        add(lblDiscount5, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 200, 20, -1));

        jLabel16.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setText("Balance");
        add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 190, -1, -1));

        txtBalance.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txtBalance.setForeground(new java.awt.Color(0, 0, 0));
        txtBalance.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBalance.setSelectionColor(new java.awt.Color(0, 0, 204));
        txtBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBalanceActionPerformed(evt);
            }
        });
        add(txtBalance, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 220, 160, 40));

        lblDiscount1.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        lblDiscount1.setForeground(new java.awt.Color(204, 0, 0));
        lblDiscount1.setText("=");
        add(lblDiscount1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 210, 30, -1));

        tblDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Discription", "Qty", "unitPrice", "Total"
            }
        ));
        tblDetail.setRowHeight(20);
        tblDetail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblDetailKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblDetail);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 410, 1110, 310));

        jButton3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton3.setText("remove");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-410, 620, -1, 50));

        btnPlaceBill.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnPlaceBill.setText("place bill");
        btnPlaceBill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPlaceBillMouseClicked(evt);
            }
        });
        btnPlaceBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlaceBillActionPerformed(evt);
            }
        });
        add(btnPlaceBill, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 730, 120, 50));

        txtBQty.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txtBQty.setForeground(new java.awt.Color(0, 0, 0));
        txtBQty.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBQty.setSelectionColor(new java.awt.Color(0, 0, 204));
        txtBQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBQtyActionPerformed(evt);
            }
        });
        txtBQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBQtyKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBQtyKeyReleased(evt);
            }
        });
        add(txtBQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 110, 70, 40));

        jLabel31.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(0, 0, 0));
        jLabel31.setText("Qty");
        add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 80, -1, -1));

        btnRemove.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnRemove.setText("remove");
        btnRemove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRemoveMouseClicked(evt);
            }
        });
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });
        add(btnRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 730, -1, 50));

        txtFID.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txtFID.setForeground(new java.awt.Color(0, 0, 0));
        txtFID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtFID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFIDActionPerformed(evt);
            }
        });
        add(txtFID, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 150, 40));

        txtContact.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txtContact.setForeground(new java.awt.Color(0, 0, 0));
        txtContact.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContactActionPerformed(evt);
            }
        });
        txtContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtContactKeyReleased(evt);
            }
        });
        add(txtContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 330, 190, 40));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 1110, 20));

        comboDescription.setBackground(new java.awt.Color(69, 73, 74));
        comboDescription.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        comboDescription.setForeground(new java.awt.Color(0, 0, 0));
        comboDescription.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "selected Food" }));
        comboDescription.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboDescriptionItemStateChanged(evt);
            }
        });
        add(comboDescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 110, 200, 40));

        btnOk.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnOk.setText("OK");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });
        add(btnOk, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 170, 100, 40));

        btnClear.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnClear.setText("clear");
        btnClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClearMouseClicked(evt);
            }
        });
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 330, 120, 40));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(120, 36, 69));
        jLabel1.setText("MANAGE PURCHASE");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 20, -1, -1));

        jPanel2.setBackground(new java.awt.Color(41, 39, 40));
        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1110, -1));
        add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, 1110, 10));
    }// </editor-fold>//GEN-END:initComponents

    private void txtAVQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAVQtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAVQtyActionPerformed

    private void txtAVQtyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAVQtyKeyReleased

    }//GEN-LAST:event_txtAVQtyKeyReleased

    private void txtUnitPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUnitPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUnitPriceActionPerformed

    private void txtAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAmountActionPerformed

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalActionPerformed

    private void txtTotalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTotalKeyReleased

    }//GEN-LAST:event_txtTotalKeyReleased

    private void txtPurchaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPurchaseActionPerformed
        double purchase = Double.parseDouble(txtPurchase.getText());
        double total = Double.parseDouble(txtTotal.getText());

        double blance = purchase - total;
        txtBalance.setText(String.valueOf(blance));
    }//GEN-LAST:event_txtPurchaseActionPerformed

    private void txtPurchaseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPurchaseKeyPressed

    }//GEN-LAST:event_txtPurchaseKeyPressed

    private void txtBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBalanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBalanceActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
//        DefaultTableModel model = (DefaultTableModel) tbl.getModel();
//        int row = tbl.getSelectedRow();
//        if (row == -1) {
//            return;
//        }
//        model.removeRow(row);
//        calculateTotal();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnPlaceBillMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPlaceBillMouseClicked
//        tbl.removeAll();
    }//GEN-LAST:event_btnPlaceBillMouseClicked

    private void btnPlaceBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlaceBillActionPerformed
        String invoiceId = lblInvoice.getText();
        String date = lblDate.getText();

        ArrayList<InvoiceDetailDTO> list = new ArrayList<>();
        DefaultTableModel model = (DefaultTableModel) tblDetail.getModel();

        for (int i = 0; i < model.getRowCount(); i++) {
            String itemId = (String) model.getValueAt(i, 0);
            double unitPrice = (double) model.getValueAt(i, 3);
            int qty = (int) model.getValueAt(i, 2);
            double total = (double) model.getValueAt(i, 4);

            InvoiceDetailDTO inDetail = new InvoiceDetailDTO(invoiceId, itemId, qty, total);
            list.add(inDetail);
        }
        if (txtContact != null) {
            try {
                InvoiceDTO invoice = new InvoiceDTO(invoiceId, date, list);
                boolean isSaved = new InvoiceController().placeBill(invoice,txtContact.getText());
                if (isSaved) {
                    boolean isDeleteFood = new InvoiceController().deleteFood(txtContact.getText());
                    if (isDeleteFood) {
                        JOptionPane.showMessageDialog(this, "Bill Placed");
                        clearText2();
                        loadInvoiceId();
                        comboDescription.removeAllItems();
                        comboDescription.addItem("selected Food");
                        loadAllFoods();
                        clearAll();
                        txtContact.setText("");
                    } else {
                        JOptionPane.showMessageDialog(this, "Bill Placed");
                    }
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(PurchaseForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(PurchaseForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            try {
                InvoiceDTO invoice = new InvoiceDTO(invoiceId, date, list);
                boolean isSaved = new InvoiceController().placeBill(invoice,txtContact.getText());
                if (isSaved) {
                    JOptionPane.showMessageDialog(this, "Bill Placed");
                    clearText2();
                    loadInvoiceId();
                    comboDescription.removeAllItems();
                    comboDescription.addItem("selected Food");
                    loadAllFoods();
                    clearAll();
                    txtContact.setText("");
                } else {
                    JOptionPane.showMessageDialog(this, "Error");
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(PurchaseForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(PurchaseForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_btnPlaceBillActionPerformed

    private void txtBQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBQtyActionPerformed

        DefaultTableModel model = (DefaultTableModel) tblDetail.getModel();
        int qty = Integer.parseInt(txtBQty.getText());
        double uPrice = Double.parseDouble(txtUnitPrice.getText());
        double total = uPrice * qty;
        int rowIndex = isAllreadyExixts(txtFID.getText());
        if (rowIndex == -1) {
            Object[] rowData = {txtFID.getText(),
                comboDescription.getSelectedItem().toString(),
                qty,
                uPrice,
                total};
            model.addRow(rowData);
        } else {
            qty += (int) model.getValueAt(rowIndex, 2);
            total += (double) model.getValueAt(rowIndex, 4);
            tblDetail.setValueAt(qty, rowIndex, 2);
            tblDetail.setValueAt(total, rowIndex, 4);
        }
        calculateTtotal();


    }//GEN-LAST:event_txtBQtyActionPerformed

    private void txtBQtyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBQtyKeyReleased
        if (txtBQty != null || txtUnitPrice != null) {
            int qty = Integer.parseInt(txtBQty.getText());
            double uPrice = Double.parseDouble(txtUnitPrice.getText());
            double total = uPrice * qty;
            txtAmount.setText(String.valueOf(total));
        }


    }//GEN-LAST:event_txtBQtyKeyReleased

    private void btnRemoveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRemoveMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRemoveMouseClicked

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblDetail.getModel();
        int row = tblDetail.getSelectedRow();
        if (row == -1) {
            return;
        }
        model.removeRow(row);
        calculateTtotal();
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void txtFIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFIDActionPerformed

    private void txtContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContactActionPerformed
        try {
            DefaultTableModel model = (DefaultTableModel) tblDetail.getModel();
            String checkContact = new InvoiceController().checkContact(txtContact.getText());
            if (checkContact != null) {
                for (QueryDTO query : new InvoiceController().getAllOrders(txtContact.getText())) {
                    model.addRow(new Object[]{
                        query.getfId(),
                        query.getDescription(),
                        query.getQty(),
                        query.getTotal(),
                        query.getUnitPrice()

                    });
                    calculateTtotal();
                }

            } else {
                JOptionPane.showMessageDialog(this, "This customer has no orders");
                txtContact.setText("");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PurchaseForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(PurchaseForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtContactActionPerformed

    private void comboDescriptionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboDescriptionItemStateChanged
        try {
            String description = (String) comboDescription.getSelectedItem();
            FoodDTO food = new OrderController().getFoodDetails(description);
            if (food != null) {
                txtFID.setText(food.getfId());
                txtAVQty.setText(food.getQty());
                txtUnitPrice.setText(String.valueOf(food.getUnitPrice()));
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PurchaseForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(PurchaseForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_comboDescriptionItemStateChanged

    private void txtBQtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBQtyKeyPressed

    }//GEN-LAST:event_txtBQtyKeyPressed

    private void txtContactKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContactKeyReleased

    }//GEN-LAST:event_txtContactKeyReleased

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        try {
            DefaultTableModel model = (DefaultTableModel) tblDetail.getModel();
            int qty = Integer.parseInt(txtBQty.getText());
            double uPrice = Double.parseDouble(txtUnitPrice.getText());
            double total = uPrice * qty;
            int rowIndex = isAllreadyExixts(txtFID.getText());
            if (rowIndex == -1) {
                Object[] rowData = {txtFID.getText(), comboDescription.getSelectedItem().toString(), qty, uPrice, total};
                model.addRow(rowData);
            } else {
                qty += (int) model.getValueAt(rowIndex, 2);
                total += (double) model.getValueAt(rowIndex, 4);
                tblDetail.setValueAt(qty, rowIndex, 2);
                tblDetail.setValueAt(total, rowIndex, 4);
            }
            calculateTtotal();
            clearText2();
            comboDescription.removeAllItems();
            comboDescription.addItem("selected Food");
            loadAllFoods();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PurchaseForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(PurchaseForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnOkActionPerformed

    private void tblDetailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblDetailKeyReleased

    }//GEN-LAST:event_tblDetailKeyReleased

    private void btnClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnClearMouseClicked

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearAll();
    }//GEN-LAST:event_btnClearActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnOk;
    private javax.swing.JButton btnPlaceBill;
    private javax.swing.JButton btnRemove;
    private javax.swing.JComboBox<String> comboDescription;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblCustName;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDiscount1;
    private javax.swing.JLabel lblDiscount5;
    private javax.swing.JLabel lblInvoice;
    private javax.swing.JTable tblDetail;
    private javax.swing.JTextField txtAVQty;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtBQty;
    private javax.swing.JTextField txtBalance;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtFID;
    private javax.swing.JTextField txtPurchase;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtUnitPrice;
    // End of variables declaration//GEN-END:variables

    private void loadAllFoods() throws ClassNotFoundException, SQLException {
        for (FoodDTO food : new FoodController().loadAllFood()) {
            comboDescription.addItem(food.getDescription());
        }
    }

    private int isAllreadyExixts(String id) {
        DefaultTableModel model = (DefaultTableModel) tblDetail.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            String temp = model.getValueAt(i, 0).toString();
            if (temp.equalsIgnoreCase(id)) {
                return i;
            }
        }
        return -1;

    }

    private void calculateTtotal() {
        DefaultTableModel model = (DefaultTableModel) tblDetail.getModel();
        double total = 0;
        for (int i = 0; i < model.getRowCount(); i++) {
            total += (double) model.getValueAt(i, 4);

        }
        txtTotal.setText(String.valueOf(total));
    }

    private void loadInvoiceId() throws ClassNotFoundException, SQLException {
        String invoiceId = new InvoiceController().getLastId();
        if (invoiceId == null) {
            lblInvoice.setText("ID001");
        } else {
            String split[] = invoiceId.split("ID");
            int num = Integer.parseInt(split[1]);
            num++;

            if (num < 10) {
                lblInvoice.setText("ID00" + num);
            } else if (num < 100) {
                lblInvoice.setText("ID0" + num);
            } else if (num < 1000) {
                lblInvoice.setText("ID" + num);
            }
        }
    }

    private void loadDate() {
        Date date = new Date();
        SimpleDateFormat dateFormat = new SimpleDateFormat("YYYY-MM-dd");
        String date2 = dateFormat.format(date);
        lblDate.setText(date2);
    }

    private void clearText2() {
        txtFID.setText("");
        txtAVQty.setText("");
        txtBQty.setText("");
        txtUnitPrice.setText("");
        txtAmount.setText("");
    }

    private void clearAll() {
        DefaultTableModel model = (DefaultTableModel) tblDetail.getModel();
        model.setRowCount(0);
        txtTotal.setText("");
        txtPurchase.setText("");
    }
}
